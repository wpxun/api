_id: spc_2c436005591e4404adaa5931eb89d4a2
contentType: yaml
contents: >-
  openapi: 3.0.1

  info:
    title: 账号体系
    description: 认证流程和用户操作接口，内部域名需要绑定 hosts。<br/>对于 4xx 和 5xx，状态码有两级，一级是 HTTP Status(在swagger 里面也显示为 Code)，它表示 HTTP 请求的状态；二级是业务层面的 code，它表示业务处理的状态。更多信息请查阅文档：<a target="_blank" href="https://confluence.qmlm.work/pages/viewpage.action?pageId=4194305">服务端错误码<a/>
    version: 1.0.0
  servers:

  - description: 开发服，内部域名
    url: http://acc.qmlm.cn
  - description: 测试服
    url: https://api.qmlm.work/account
  - description: 正式服
    url: https://api.yifangkong.com/account
  tags:

  - name: 登录流程
    description: 登录或第三方平台授权登录
  - name: 用户认证
    description: 认证相关的操作
  - name: 用户
    description: 用户相关的操作
  - name: 地址
    description: 用户地址相关的操作
  - name: 收付款账号
    description: 收付款账号相关的操作
  - name: 版本控制
    description: APP、协议版本控制
  paths:
    /v1/login:
      post:
        tags:
        - 登录流程
        summary: 登录或者注册
        description: 该接口同时包含登录和注册功能，目前支持的登录方式：<br/>1. 手机号+手机验证码（自动注册）<br/>2. 已注册的手机号+密码<br/>3. 邮箱+邮箱验证码（自动注册）<br/>4. 已注册的邮箱+密码
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginRequest'
          required: true
        responses:
          "200":
            description: 登录成功
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    user:
                      $ref: '#/components/schemas/User'
                    token:
                      type: string
                      description: token，有效期1个月
          "201":
            description: 创建用户成功但未完成注册流程，或者之前已经登录了但未完成注册流程
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    token:
                      type: string
                      description: token，有效期1个月
          "400":
            description: 输入参数有误 / 验证码不一致 / 账号或者密码错误
          "500":
            description: 服务器错误
    /v1/wechat/miniprogram/silentlogin:
      post:
        tags:
        - 登录流程
        summary: 微信小程序静默登录，不会自动注册
        description: 若用户已经绑定过小程序，用 code 可直接登录，返回完整的登录信息；否则接口为 201 状态且只返回临时登录态的 silent_token，该 silent_token 仅用来进行授权登录，授权登录由用户触发。本质上 silent_token 和 微信的 session_key 绑定。<br/>该接口不会自动注册。
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                    description: wx.login() 获取的 code
        responses:
          "200":
            description: 登录成功
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    user:
                      $ref: '#/components/schemas/User'
                    token:
                      type: string
                      description: token，有效期1个月
          "201":
            description: 临时登录态，还未完成登录，需要用户触发进行授权登录
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    silent_token:
                      type: string
                      description: silent_token，有效期 7200 分钟
          "400":
            description: 输入参数有误 / 验证码不一致 / 账号或者密码错误
          "500":
            description: 服务器错误
    /v1/wechat/miniprogram/authorizeuserinfo:
      post:
        tags:
        - 登录流程
        summary: 微信小程序授权用户信息，不做任何登录注册操作
        description: 该接口仅仅是预绑定用户信息，不做任何登录注册操作，调用该接口后表示将用户信息与silent_token进行绑定。<br/>静默登录返回 201 时表示需要进行用户信息授权，拿到用户的昵称、头像等信息。
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WechatRequest'
          required: true
        responses:
          "200":
            description: 绑定用户信息成功
          "400":
            description: 输入参数有误 / 数据验证错误
          "500":
            description: 服务器错误
    /v1/wechat/miniprogram/authorizelogin:
      post:
        tags:
        - 登录流程
        summary: 微信小程序授权手机号进行登录或注册
        description: 静默登录返回 201 时表示需要进行授权登录，如果手机号未注册，则会自动进行注册
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WechatRequest'
          required: true
        responses:
          "200":
            description: 登录成功
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    user:
                      $ref: '#/components/schemas/User'
                    token:
                      type: string
                      description: token，有效期1个月
          "400":
            description: 输入参数有误 / 数据验证错误
          "500":
            description: 服务器错误
    /v1/logout:
      get:
        tags:
        - 登录流程
        summary: 退出登录
        description: 后端清除登录状态，同时前端也应删除 token
        security:
          - qmlm: []
        responses:
          "200":
            description: 退出成功
          "400":
            description: 输入参数有误
          "500":
            description: 服务器错误
            content: {}
    /v1/sendcode:
      get:
        tags:
        - 用户认证
        summary: 发送短信验证码
        parameters:
        - name: phone
          in: query
          description: 用户手机号
          required: true
          schema:
            type: string
        - name: valid
          in: query
          description: 选填，取值 0 | 1，默认为0；当 valid=1 时验证手机号是否已经注册，如果是已注册才会发送验证码，否则提示用户不存在；<br/>只有找回密码操作才需要验证，注册和修改都不需要验证
          schema:
            type: string
        responses:
          "400":
            description: 输入参数有误
          "200":
            description: 短信验证码已经发送
          "404":
            description: 账号不存在
    /v1/sendemail:
      get:
        tags:
        - 用户认证
        summary: 发送验证码邮件或验证链接邮件
        parameters:
        - name: email
          in: query
          description: 用户邮箱
          required: true
          schema:
            type: string
        - name: valid
          in: query
          description: 选填，取值 0 | 1，默认为0；当 valid=1 时验证邮箱是否已经注册，如果是已注册才会发送邮件，否则提示用户不存在；<br/>只有找回密码操作才需要验证，注册和修改都不需要验证
          schema:
            type: string
        - name: type
          in: query
          description: 选填，取值 1 | 2，默认为1；当 type=1 发送验证链接邮件（异步验证），当 type=2 发送验证码邮件（同步验证）；<br/>邮箱可以同步验证或异步验证，但已经验证过的邮箱后期只能同步验证
          schema:
            type: string
        responses:
          "400":
            description: 输入参数有误
          "200":
            description: 邮件已经发送
          "404":
            description: 账号不存在
    /v1/cloudauth/verifypassport:
      post:
        tags:
        - 用户认证
        summary: 用户护照认证
        description: 暂时不通过云端，直接填写即完成实名认证
        security:
          - qmlm: []
        requestBody:
          content:
            'application/json':
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: 真实姓名，必填项
                  birth:
                    description: 生日
                    type: string
                    example: "19700101"
                  number:
                    type: string
                    description: 证件号
                  sex:
                    type: string
                    description: 性别 取值[Male|Female]
        responses:
          "200":
            description: 认证状态
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    VerifyStatus:
                      type: integer
                      description: 状态，取值-1/0/1/3-n，1为认证通过，其它状态都为认证不通
          "400":
            description: 认证失败，参数错误
    /v1/cloudauth/verifytwofactor:
      post:
        tags:
        - 用户认证
        summary: 用户身份认证（二要素）
        description: 暂时不通过云端，直接填写即完成实名认证
        security:
          - qmlm: []
        requestBody:
          content:
            'application/json':
              schema:
                type: object
                properties:
                  name:
                    type: string
                    description: 真实姓名
                  number:
                    type: string
                    description: 身份证件号
        responses:
          "200":
            description: 认证状态
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    VerifyStatus:
                      type: integer
                      description: 状态，取值-1/0/1/3-n，1为认证通过，其它状态都为认证不通
          "400":
            description: 认证失败，参数错误
    /v1/cloudauth/verifytoken:
      get:
        tags:
        - 用户认证
        summary: 用户活体认证，开始认证
        description: 接入方服务端调用发起认证请求接口，从实人认证服务端获取token，同时，根据不同的认证方案，可以通过该接口提前传入一些材料。取到token后返回给接入方APP端。<br/>后端根据bizid：develop-user_id 来标识认证信息，用户已经认证过的后期再认证可以快速通过阿里认证。
        security:
          - qmlm: []
        responses:
          "200":
            description: 认证token
          "400":
            description: 获取认证token失败
    /v1/cloudauth/verifystatus:
      get:
        tags:
        - 用户认证
        summary: 获取用户活体认证状态
        description: 接入方APP接收到认证结果回调后，此时接入方服务端就可以调用获取认证状态的接口，从实人认证服务端来获取认证状态和认证资料。<br/> 目前阿里云认证不会回调，必须得后端请求阿里认证状态去改变后台状态，目前三种方式会去阿里请求认证状态：1、该接口，2、成为房东，3、获取房东信息
        security:
          - qmlm: []
        responses:
          "200":
            description: 判定认证结果
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    VerifyStatus:
                      type: integer
                      description: 状态，取值-1/0/1/3-n，1为认证通过，其它状态都为认证不通过
          "400":
            description: 判定认证结果失败
    /v1/landlords:
      get:
        tags:
        - 用户认证
        summary: 获取当前房东的认证信息
        security:
          - qmlm: []
        responses:
          "200":
            description: 获取成功
            content:
              application/json:
                schema:
                  allOf:
                    - $ref: '#/components/schemas/Landlord'
                    - type: object
                      properties:
                        face_verify_status:
                          type: integer
                          description: 实人认证状态，1为已经实人认证，来自 material.VerifyStatus -1/0/1/3-n
                        landlord_verify_status:
                          type: integer
                          description: 房东验证状态，1为验证通过，可以变成房东
          "404":
            description: 用户不存在
      patch:
        tags:
        - 用户认证
        summary: 更新房东的基本信息
        description: 目前房东信息的修改是分接口的，只有联系房东的手机号是通过这个接口修改，收付款账号和实人认证都是通过其它的接口
        security:
          - qmlm: []
        requestBody:
          description: 更新用户部分数据
          content:
            'application/json':
              schema:
                allOf:
                  - $ref: '#/components/schemas/Landlord'
                  - type: object
                    properties:
                      code:
                        type: string
                        description: 选填，如果需要修改联系方式手机号，则必填
          required: true
        responses:
          "400":
            description: 输入参数错误
            content: {}
          "200":
            description: 更新成功
            content:
              'application/json':
                schema:
                  $ref: '#/components/schemas/Landlord'
      post:
        tags:
        - 用户认证
        summary: 成为房东
        description: 即使是认证全部通过，也要准房东点击“成为房东”才会变为房东，成为房东后在用户数据中 is_landlord = 1
        security:
          - qmlm: []
        responses:
          "400":
            description: 输入参数错误
            content: {}
          "200":
            description: 操作成功
            content: {}
    /v1/users:
      get:
        tags:
        - 用户
        summary: 获取当前用户信息
        security:
          - qmlm: []
        responses:
          "200":
            description: 获取成功
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/User'
          "404":
            description: 用户不存在
      patch:
        tags:
        - 用户
        summary: 更新当前用户信息
        description: 选择性更新用户信息
        security:
          - qmlm: []
        requestBody:
          description: 更新用户部分数据
          content:
            'application/json':
              schema:
                allOf:
                    - $ref: '#/components/schemas/User'
                    - type: object
                      properties:
                        code:
                          type: string
                          description: 选填，如果需要修改手机号，则必填
                        ecode:
                          type: string
                          description: 选填，如果需要修改邮箱，则必填
          required: true
        responses:
          "400":
            description: 输入参数错误、密码强度不达要求、更新失败
            content: {}
          "200":
            description: 更新成功
            content: 
              'application/json':
                schema:
                  $ref: '#/components/schemas/User'
      delete:
        tags:
        - 用户
        summary: 注销当前用户
        description: This can only be done by the logged in user.
        security:
          - qmlm: []
        responses:
          "200":
            description: 注销账号成功
          "404":
            description: 用户不存在
    /v1/users/{id}:
      get:
        tags:
        - 用户
        summary: 浏览用户信息，无需认证
        parameters:
          - name: id
            in: path
            description: 地址ID
            required: true
            schema:
              type: integer
          - name: role
            in: query
            description: 角色，为2表示获取房东数据，不传或为1表示房客数据
            schema:
              type: integer
        responses:
          "200":
            description: 获取成功
            content:
              application/json:
                schema:
                  allOf:
                  - $ref: '#/components/schemas/User'
                  - type: object
                    properties:
                      landlord:
                        $ref: '#/components/schemas/Landlord'
          "404":
            description: 用户不存在
    /v1/addresses:
      get:
        tags:
        - 地址
        summary: 获取当前用户的地址列表
        security:
          - qmlm: []
        responses:
          "200":
            description: 获取成功
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Address'
          "404":
            description: 用户不存在
      post:
        tags:
        - 地址
        summary: 当前用户新增一个地址
        description: 验证所有的数据
        security:
          - qmlm: []
        requestBody:
          description: 需要传递所有可传的参数
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Address'
          required: true
        responses:
          "400":
            description: 输入参数错误
            content: {}
          "200":
            description: 更新成功
            content: {}
          "404":
            description: 用户不存在、地址不存在
    /v1/addresses/{id}:
      get:
        tags:
        - 地址
        summary: 获取当前用户的一个地址
        security:
          - qmlm: []
        parameters:
          - name: id
            in: path
            description: 地址ID
            required: true
            schema:
              type: integer
        responses:
          "200":
            description: 获取成功
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Address'
          "404":
            description: 用户不存在、地址不存在
      put:
        tags:
        - 地址
        summary: 更新当前用户的一个地址
        description: 更新地址的全部数据，如果没有某个字段则置为零值
        security:
          - qmlm: []
        parameters:
          - name: id
            in: path
            description: 地址ID
            required: true
            schema:
              type: integer
        requestBody:
          description: 更新地址的全部数据，如果没有某个字段则置为零值
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Address'
          required: true
        responses:
          "400":
            description: 输入参数错误
            content: {}
          "200":
            description: 更新成功
            content: {}
          "404":
            description: 用户不存在、地址不存在
      delete:
        tags:
        - 地址
        summary: 删除当前用户的一个地址
        description: 硬删除，不可恢复
        security:
          - qmlm: []
        parameters:
          - name: id
            in: path
            description: 地址ID
            required: true
            schema:
              type: integer
        responses:
          "200":
            description: 删除成功
          "404":
            description: 用户不存在、地址不存在
    /v1/address/priority:
      get:
        tags:
        - 地址
        summary: 获取用户一个最优地址
        security:
          - qmlm: []
        responses:
          "200":
            description: 获取成功
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Address'
          "404":
            description: 用户不存在、地址不存在
    /v1/payments:
      get:
        tags:
        - 收付款账号
        summary: 获取当前用户的账号列
        security:
          - qmlm: []
        responses:
          "200":
            description: 获取成功
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Payment'
          "404":
            description: 用户不存在
      post:
        tags:
        - 收付款账号
        summary: 当前用户新增一个账号
        description: 验证所有的数据
        security:
          - qmlm: []
        requestBody:
          description: 需要传递所有可传的参数
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Payment'
          required: true
        responses:
          "400":
            description: 输入参数错误
            content: {}
          "200":
            description: 更新成功
            content: {}
          "404":
            description: 用户不存在
    /v1/payments/{id}:
      get:
        tags:
        - 收付款账号
        summary: 获取当前用户的一个账号
        security:
          - qmlm: []
        parameters:
          - name: id
            in: path
            description: 地址ID
            required: true
            schema:
              type: integer
        responses:
          "200":
            description: 获取成功
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Payment'
          "404":
            description: 用户不存在、地址不存在
      put:
        tags:
        - 收付款账号
        summary: 更新当前用户的一个账号
        description: 更新地址的全部数据，如果没有某个字段则置为零值
        security:
          - qmlm: []
        parameters:
          - name: id
            in: path
            description: 地址ID
            required: true
            schema:
              type: integer
        requestBody:
          description: 更新地址的全部数据，如果没有某个字段则置为零值
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/Payment'
          required: true
        responses:
          "400":
            description: 输入参数错误
            content: {}
          "200":
            description: 更新成功
            content: {}
          "404":
            description: 用户不存在、地址不存在
      delete:
        tags:
        - 收付款账号
        summary: 删除当前用户的一个账号
        description: 硬删除，不可恢复
        security:
          - qmlm: []
        parameters:
          - name: id
            in: path
            description: 地址ID
            required: true
            schema:
              type: integer
        responses:
          "200":
            description: 删除成功
          "404":
            description: 用户不存在、地址不存在
    /v1/protocol:
      get:
        tags:
        - 版本控制
        summary: 获取当前用户的某一个类型的协议信息
        description: 如果是未登录的用户，获取到的最新的协议一定是用户未同意的；<br/>如果是已经登录的用户，获取到的最新的协议根据用户之前同意的协议时间与最新的协议修改时间进行比较，来判断用户是否需要同意该协议
        parameters:
          - name: type
            in: query
            description: 协议类型，必传，[aircity] aircity表示登录掌控城时的协议
            required: true
            schema:
              type: string
        responses:
          "200":
            description: 获取成功
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Protocol'
          "404":
            description: 协议类型不存在等
      post:
        tags:
        - 版本控制
        summary: 用户同意某一个协议，如是注册相关无需调该接口
        description: 这个一般用在登录后，发现有新的协议时调用该接口，如果是注册类的会默认进行同意，不需要调用该接口
        security:
          - qmlm: []
        requestBody:
          content:
            'application/json':
              schema:
                type: object
                properties:
                  type:
                    type: string
                    description: 协议类型，必传，[aircity] aircity表示登录掌控城时的协议
        responses:
          "200":
            description: 操作成功
          "404":
            description: 协议类型不存在等
    /v1/appversion:
      get:
        tags:
        - 版本控制
        summary: 获取最新的APP版本
        description: 用户APP类型和其当前的版本号是通过 User_Agent 传递
        responses:
          "200":
            description: 获取成功
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/APPVersion'
          "404":
            description: 未能检测到APP的类型 | 该APP类型暂不支持版本检测
  components:
    schemas:
      User:
        type: object
        properties:
          id:
            type: integer
            format: int64
            description: 编号，不可传
          username:
            type: string
            description: 登录名
          name:
            type: string
            description: 昵称
          phone:
            type: string
            description: 手机号
          password:
            type: string
            description: 密码
          birth:
            type: string
            description: 生日
            example: 19930209
          sex:
            type: string
            description: 性别，取值Male或Female
          email:
            type: string
            format: email
            description: 邮箱
          email_is_verified:
            type: integer
            format: int8
            description: 邮箱是否被认证，0表示未认证，1表示已经认证
          avatar:
            type: string
            format: url
            description: 头像地址
          country_code:
            type: string
            description: 国家编号
          province:
            type: string
            description: 省
          city:
            type: string
            description: 城市
          company:
            type: string
            description: 公司
          introduction:
            type: string
            description: 自我介绍
          is_realauth:
            type: integer
            description: 是否实人认证，1为已经认证，认证通过后性别和生日不可更改，不可传 
            format: int8
          is_landlord:
            type: integer
            description: 是否房东，1为房东，不可传 
            format: int8
          created_at:
            type: integer
            format: int64
            description: 创建时间，不可传 
          updated_at:
            type: integer
            format: int64
            description: 更新时间，不可传
      Landlord:
        type: object
        properties:
          id:
            type: integer
            format: int64
            description: 编号，不可传
          user_id:
            type: integer
            format: int64
            description: 用户编号，不可传
          contact_phone:
            type: string
            description: 联系方式，初始默认为注册手机号
          is_super_host:
            type: integer
            description: 是否超赞房东，不可传
            format: int8
          verify_at:
            type: integer
            format: int64
            description: 成为房东的时间，不可传
          created_at:
            type: integer
            format: int64
            description: 创建时间，不可传
          updated_at:
            type: integer
            format: int64
            description: 更新时间，不可传
      Address:
        type: object
        properties:
          id:
            type: integer
            format: int64
            description: 编号，不可传
          user_id:
            type: integer
            format: int64
            description: 用户编号，不可传
          type:
            type: string
            description: 类型，商务住宅;住宅区;住宅小区
          country:
            description: 国家
            type: string
          province:
            type: string
            description: 省份
          city:
            type: string
            description: 城市
          district:
            type: string
            description: 区县
          address:
            type: string
            description: 详细地址
          unit:
            type: string
            description: 门牌号
          lng:
            type: number
            description: 经度
          lat:
            type: number
            description: 纬度
          postcode:
            type: string
            description: 邮编
          phone:
            type: string
            description: 手机号
          name:
            type: string
            description: 姓名
          remark:
            type: string
            description: 备注信息
          is_default:
            type: integer
            description: 是否默认地址,1为默认，0为非默认
            format: int8
          created_at:
            type: integer
            format: int64
            description: 创建时间，不可传 
          updated_at:
            type: integer
            format: int64
            description: 更新时间，不可传
      Payment:
        type: object
        properties:
          id:
            type: integer
            format: int64
            description: 编号，不可传
          user_id:
            type: integer
            format: int64
            description: 用户编号，不可传
          type:
            type: string
            description: 账号类型，信用卡/储蓄卡/在线支付
          card_type:
            description: 卡类型，银联/visa/万事达
            type: string
          holder_name:
            type: string
            description: 持卡人
          bank_name:
            type: string
            description: 银行名称/支付宝/微信
          card_num:
            type: string
            description: 卡号
          safe_num:
            type: string
            description: 安全码
          expiration:
            type: string
            description: 卡片过期时间
          is_default:
            type: integer
            description: 是否默认地址,1为默认，0为非默认
            format: int8
          is_receipt:
            type: integer
            description: 是否收款，默认付款
            format: int8
          created_at:
            type: integer
            format: int64
            description: 创建时间，不可传 
          updated_at:
            type: integer
            format: int64
            description: 更新时间，不可传
      Material:
        type: object
        properties:
          id:
            type: integer
            format: int64
            description: 编号，不可传
          user_id:
            type: integer
            format: int64
            description: 用户编号，不可传
          name:
            type: string
            description: 真实姓名
          birth:
            description: 生日
            type: string
          number_type:
            type: integer
            description: 证件类型，[1|2] 1表示身份证，2表示护照
          number:
            type: string
            description: 身份证号
          sex:
            type: string
            description: 性别 取值男女
          nationality:
            type: string
            description: 民族
          back_image_url:
            type: string
            description: 身份证国徽面图片
          front_image_url:
            type: string
            description: 身份证人像面图片
          address:
            type: string
            description: 身份证地址
          authority:
            description: 身份证签发机构
            type: string
          face_image_url:
            type: string
            description: 人像正面照图
          start_date:
            type: string
            description: 证件有效期开始时间
          end_date:
            type: string
            description: 证件有效期结束时间
          authority_comparision_score:
            type: integer
            description: 证过程中所提交的人脸照片和权威数据的比对分0-100
          bizid:
            type: string
            description: 实人认证业务ID
          biztype:
            type: string
            description: 实人认证业务名称
            format: int8
          source_data:
            type: string
            description: 实人认证原始数据
          verify_status:
            type: integer
            description: 实人认证状态-1/0/1/3-n
            format: int8
          is_verify_token:
            type: integer
            description: 是否已经获取verifytoken
            format: int8
          created_at:
            type: integer
            format: int64
            description: 创建时间，不可传 
          updated_at:
            type: integer
            format: int64
            description: 更新时间，不可传
      Protocol:
        type: object
        properties:
          type:
            type: string
            description: 协议类型，[aircity] aircity表示登录掌控城时的协议
          name:
            description: 协议名称
            type: string
          version:
            type: string
            description: 协议版本
          url:
            type: string
            description: 协议 html 文本的地址
          is_agreed:
            type: integer
            description: 当前用户是否已经同意该协议，[0|1]，0表示未同意，1表示已经同意
          created_at:
            type: integer
            format: int64
            description: 该协议创建时间
      APPVersion:
        type: object
        properties:
          type:
            type: string
            description: APP类型，[ios|android]，通过User_Agent获取
          priority:
            type: integer
            description: 优先权，1:普通更新，2:强制更新
          version:
            type: string
            description: 版本号
          download:
            type: string
            description: 下载地址
          content:
            description: 更新内容
            type: string
          created_at:
            type: integer
            format: int64
            description: 该版本创建时间
      LoginRequest:
        type: object
        properties:
          phone:
            type: string
            description: 注册的手机号
          code:
            type: string
            description: 手机验证码
          email:
            type: string
            description: 注册的邮箱
          ecode:
            type: string
            description: 邮箱验证码
          password:
            type: string
            description: 密码
      WechatRequest:
        type: object
        properties:
          silent_token:
            type: string
            description: 静默登录 201 状态返回的 silent_token
          encryptedData:
            type: string
            description: 包括敏感数据在内的完整用户信息的加密数据
          iv:
            type: string
            description: 加密算法的初始向量
    securitySchemes:
      qmlm:
        type: http
        scheme: bearer
        bearerFormat: JWT
created: 1589023179927
fileName: 账号体系
modified: 1589162667737
parentId: wrk_0773c33f5e0042dd9cfb93420952b222
type: ApiSpec
